set(REALSENSE_INC_SEARCH_PATH /usr/local/include)
set(REALSENSE_LIB_SEARCH_PATH /usr/local/lib)

if(MSVC)
  list(APPEND REALSENSE_INC_SEARCH_PATH "C:/librealsense/include")

  list(APPEND REALSENSE_INC_SEARCH_PATH $ENV{REALSENSE_HOME}/include)
  list(APPEND REALSENSE_INC_SEARCH_PATH $ENV{REALSENSE_DIR}/include)

  list(APPEND REALSENSE_LIB_SEARCH_PATH $ENV{REALSENSE_HOME}/lib)
  list(APPEND REALSENSE_LIB_SEARCH_PATH $ENV{REALSENSE_DIR}/lib)

  if(CMAKE_CL_64)
    list(APPEND REALSENSE_LIB_SEARCH_PATH "C:/librealsense/bin/x64")
    list(APPEND REALSENSE_LIB_SEARCH_PATH $ENV{REALSENSE_HOME}/bin/x64)
    list(APPEND REALSENSE_LIB_SEARCH_PATH $ENV{REALSENSE_DIR}/bin/x64)
  else()
    list(APPEND REALSENSE_LIB_SEARCH_PATH "C:/librealsense/bin/Win32")
    list(APPEND REALSENSE_LIB_SEARCH_PATH $ENV{REALSENSE_HOME}/bin/Win32)
    list(APPEND REALSENSE_LIB_SEARCH_PATH $ENV{REALSENSE_DIR}/bin/Win32)
  endif()

else()
  list(APPEND REALSENSE_INC_SEARCH_PATH /usr/include)
  list(APPEND REALSENSE_LIB_SEARCH_PATH /usr/lib)

  list(APPEND REALSENSE_INC_SEARCH_PATH $ENV{REALSENSE_HOME}/include)
  list(APPEND REALSENSE_LIB_SEARCH_PATH $ENV{REALSENSE_HOME}/lib)
endif()

find_path(REALSENSE_INCLUDE_DIRS librealsense2/rs.hpp
  PATHS
    ${REALSENSE_INC_SEARCH_PATH}
)

if(MSVC)
  find_library(REALSENSE_LIBRARIES_OPT
    NAMES realsense
    PATHS
      ${REALSENSE_LIB_SEARCH_PATH}
  )
  find_library(REALSENSE_LIBRARIES_DBG
    NAMES realsense-d
    PATHS
      ${REALSENSE_LIB_SEARCH_PATH}
  )
  if(REALSENSE_LIBRARIES_DBG AND REALSENSE_LIBRARIES_OPT)
    set(REALSENSE_LIBRARIES optimized ${REALSENSE_LIBRARIES_OPT})
    list(APPEND REALSENSE_LIBRARIES debug ${REALSENSE_LIBRARIES_DBG})
  elseif(REALSENSE_LIBRARIES_OPT)
    set(REALSENSE_LIBRARIES ${REALSENSE_LIBRARIES_OPT})
  elseif(REALSENSE_LIBRARIES_DBG)
    set(REALSENSE_LIBRARIES ${REALSENSE_LIBRARIES_DBG})
  endif()

  mark_as_advanced(REALSENSE_LIBRARIES_OPT REALSENSE_LIBRARIES_DBG)
else()
  find_library(REALSENSE_LIBRARIES
    NAMES realsense2
    PATHS
      ${REALSENSE_LIB_SEARCH_PATH}
  )
endif()

if(REALSENSE_LIBRARIES AND REALSENSE_INCLUDE_DIRS)
  set(REALSENSE_FOUND TRUE)
  vp_parse_header("${REALSENSE_INCLUDE_DIRS}/librealsense2/rs.h" REALSENSE_VERSION_LINES RS_API_MAJOR_VERSION RS_API_MINOR_VERSION RS_API_PATCH_VERSION)
  if(RS_API_MAJOR_VERSION)
    set(REALSENSE_VERSION "${RS_API_MAJOR_VERSION}.${RS_API_MINOR_VERSION}.${RS_API_PATCH_VERSION}")
  else()
    # This is an old version
    vp_parse_header("${REALSENSE_INCLUDE_DIRS}/librealsense2/rs.h" REALSENSE_VERSION_LINES RS_API_VERSION)
    set(REALSENSE_VERSION "${RS_API_VERSION}")
    message(WARNING "The librealsense 3rd party is detected but this version is too old to build with ViSP. You should install a more recent version.")
    set(REALSENSE_FOUND FALSE)
  endif()
else()
  set(REALSENSE_FOUND FALSE)
endif()
  
mark_as_advanced(
  REALSENSE_INCLUDE_DIRS
  REALSENSE_LIBRARIES
  REALSENSE_INC_SEARCH_PATH
  REALSENSE_LIB_SEARCH_PATH
)
